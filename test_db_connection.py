from sqlalchemy.orm import sessionmaker # type: ignore
from sqlalchemy import inspect # type: ignore
import sys
import os

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞ (c:\xampp\htdocs\)
BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))

# –î–æ–±–∞–≤–ª—è–µ–º backend/database –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.join(BASE_DIR, "backend", "database"))

from db_connector import engine, get_db
from models import Base, Price


# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
Base.metadata.create_all(bind=engine)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
def test_connection():
    try:
        inspector = inspect(engine)
        tables = inspector.get_table_names()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ! –ù–∞–π–¥–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã: {tables}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

# –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –∏ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def test_insert_and_read():
    db = next(get_db())
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ü–µ–Ω—É
    new_price = Price(exchange="TestExchange", asset="BTC/USDT", price=50000.0)
    db.add(new_price)
    db.commit()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    
    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    result = db.query(Price).all()
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(result)}")
    for r in result:
        print(f"{r.exchange} - {r.asset}: {r.price} USDT")

if __name__ == "__main__":
    test_connection()
    test_insert_and_read()